services: 
  haproxy:
    image: haproxy:2.9.0-bookworm
    hostname: ${HAPROXY_HOST}
    environment:
      # variables accesible in config/haproxy/haproxy.conf
      HAPROXY_PORT: ${HAPROXY_PORT}
      NETWORK: ${CORE_NETWORK}
      OGMIOS_PORT: ${OGMIOS_PORT}
      # POSTGREST_PORT: ${POSTGREST_PORT}
      # CARDANO_GRAPHQL_SERVER_PORT: ${CARDANO_GRAPHQL_SERVER_PORT}
      # DBLESS_CARDANO_TOKEN_REGISTRY_PORT: ${DBLESS_CARDANO_TOKEN_REGISTRY_PORT}
      # DANDELION_POSTGREST_PORT: ${DANDELION_POSTGREST_PORT}
      # CARDANO_SQL_POSTGREST_PORT: ${CARDANO_SQL_POSTGREST_PORT}
      # UNIMATRIX_PORT: ${UNIMATRIX_PORT}
    volumes:
      - ./configs/haproxy/:/usr/local/etc/haproxy/
      - ./scripts/:/scripts/
      - ./configs/ssl/server.pem:/etc/ssl/server.pem
    configs:
      - source: manifest_json
        #target: /usr/local/etc/haproxy/manifest.json
        target: /usr/local/etc/www/manifest.json
      - source: index_html
        #target: /usr/local/etc/haproxy/index.html
        target: /usr/local/etc/www/index.html
    ports:
      - ${HAPROXY_BINDED_HOST}${HAPROXY_PORT:-8053}:8053
    healthcheck:
      test: ["CMD-SHELL", "haproxy -c -- /usr/local/etc/haproxy/haproxy.cfg"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

configs:
  manifest_json:
    content: |
      {
      "dltTag": "${CORE_DLT}",
      "networkTag": "${CORE_NETWORK}",
      "name": "${CORE_NODE_NAME}",
      "description": "${CORE_NODE_DESCRIPTION}",      
      "ticker": "${CORE_NODE_TICKER}",
      "groups": ${CORE_NODE_GROUPS},
      "extensions":[${CORE_NODE_EXTENSIONS}]
      }
  index_html:
    content: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>GC Node - ${CORE_NODE_NAME} [${CORE_NODE_TICKER}] - ${CORE_DLT} - ${CORE_NETWORK}</title>
          <!-- Meta Tags for Social Media -->
          <meta name="description" content="${CORE_NODE_DESCRIPTION}">
          <meta property="og:title" content="GC Node">
          <meta property="og:description" content="${CORE_NODE_DESCRIPTION}">
          <!-- <meta property="og:image" content="https://your-website.com/path/to/image.jpg"> -->
          <!-- <meta property="og:url" content="https://your-website.com"> -->
          <meta name="twitter:card" content="summary">
          <meta name="twitter:title" content="GC Node">
          <meta name="twitter:description" content="${NODE_DESCRIPTION}">   
          <!-- End of Meta Tags for Social Media -->
      </head>
      <body>
          <div class="container">
              <h1><i>'${CORE_NODE_NAME}'</i> [${CORE_NODE_TICKER}]</h1>
              <p>Welcome to the <b>Decentralized Dandelion Network!</b></p>              
              <p><b>Description:</b> ${CORE_NODE_DESCRIPTION}</p>
              <p></p>
              <p>APIs available on this ${CORE_DLT} ${CORE_NETWORK} <b>Dandelion Lite Node</b>:</p>
              <ul class="api-list">
                  ${INDEX_LINKS}
              </ul>
          </div>
          <div class="footer">
              Made with ❤️ by GameChanger Finance + M2Tec
          </div>
      </body>
      </html>        